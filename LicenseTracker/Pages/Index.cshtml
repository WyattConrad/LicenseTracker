@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>This site provides a quick and easy way to view and manage Martech stack application license utilization.</p>
</div>

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <div id="chartContainer" class="pt-2">
            </div>
        </div>
    </div>
    <div class="row mb-4">
        <div class="col-12">
        <h4>Applications</h4>
        <table class="table table-striped table-dark table-hover">
            <thead>
                <tr>
                    <th>Application Name</th>
                    <th>Contract Total</th>
                    <th>Contract Duration</th>
                    <th>Cost Per User</th>
                    <th>Maximum Users</th>
                    <th>Current User Count</th>
                    <th>Available User Count</th>
                </tr>
            </thead>
            <tbody class="table-group-divider">
                @foreach (var a in Model.ViewModel.Applications)
                {
                    <tr>
                        <td>@a.Name</td>
                        <td>@a.ContractTotal.ToString("C")</td>
                        <td class="text-center">@a.ContractDuration</td>
                        <td>@a.CostPerUser.ToString("C")</td>
                        <td class="text-center">@a.MaxUsers</td>
                        <td class="text-center">@a.CountUsers</td>
                        <td class="text-center">@a.AvailableUsers</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="row my-4">
    <div class="col-12">
        <hr class="text-primary-emphasis"/>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <h4>Business Unit License Usage</h4>
            <table class="table table-sm table-striped table-dark table-hover">
            <thead>
                <tr>
                    <th>Business Unit</th>
                    @foreach (var app in Model.ViewModel.Applications)
                    {
                        <th>@app.Name</th>
                    }
                </tr>
            </thead>
                <tbody class="table-group-divider">
                @foreach (var b in Model.ViewModel.BusinessUnits)
                {
                    <tr>
                        <td class="px-1">@b.Name</td>
                        @foreach (var app in Model.ViewModel.Applications)
                        {
                            var appData = b.AppData.Where(a => a.AppId == app.Id).FirstOrDefault();
                            @if (appData is null)
                            {
                                <td></td>
                            }
                            else
                            {
                                <td class="text-center px-1">@appData.BUCost.ToString("C")<br/>(@appData.CountUsers)</td>
                            }
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
</div>

@section Scripts
    {
    <script>
        $(document).ready(function () {
            //let backgroundColor = rgba(66, 157, 105, 0.5);
            $.ajax({
                type: "Get",
                url: "/?handler=ApplicationData",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    var data = response.appdata;
                    var labels = data.map(obj => obj.name);
                    var totals = data.map(obj => obj.contractTotal);
                    $('#chartContainer').append(
                        `<div class="col-12 px-md-2 py-2"><canvas id="canvas" class="bg-dark-subtle p-2"></canvas></div>`);
                    const ctx = document.getElementById(`canvas`);
                    Chart.defaults.font.size = 16;
                    let delayed;
                    var myChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Applications',
                                data: totals,
                                borderColor: '#012A7C',
                                backgroundColor: 'rgba(0, 177, 240, 0.8)',
                                borderWidth: 2,
                                borderRadius: 5,
                                borderSkipped: false,
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: true,
                            animation: {
                                onComplete: () => {
                                    delayed = true;
                                },
                                delay: (context) => {
                                    let delay = 0;
                                    if (context.type === 'data' && context.mode === 'default' && !delayed) {
                                        delay = context.dataIndex * 300 + context.datasetIndex * 100;
                                    }
                                    return delay;
                                },
                            },
                            layout: {
                                padding: {
                                    left: 10,
                                    right: 10,
                                    top: 10,
                                    bottom: 10
                                }
                            },
                            plugins: {
                                legend: {
                                    display: false
                                },
                                title: {
                                    display: true,
                                    text: 'Applications By Total Cost',
                                    font: {
                                        size: 28
                                    }
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function (context) {
                                            let label = context.dataset.label || '';

                                            if (label) {
                                                label += ': ';
                                            }
                                            if (context.parsed.y !== null) {
                                                label += new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(context.parsed.y);
                                            }
                                            return label;
                                        }
                                    }
                                }
                            },
                            scales: {
                                y: {
                                        beginAtZero: true,
                                        ticks: {
                                    // Include a dollar sign in the ticks
                                    callback: function (value, index, ticks) {
                                            return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(value);;
                                    }
                                        }
                                }
                            }
                        }
                    });

                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        });
    </script>
}